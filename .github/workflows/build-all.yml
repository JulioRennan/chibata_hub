name: Build Orchestrator

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Selecione o ambiente"
        type: choice
        required: true
        default: dev
        options: [alpha, dev, prod]
      need_build_android:
        description: "Build Android?"
        type: boolean
        default: true
      need_build_ios:
        description: "Build iOS?"
        type: boolean
        default: true
      need_build_web:
        description: "Build Web?"
        type: boolean
        default: true

# precisa pra criar release/tag
permissions:
  contents: write

jobs:
  android:
    if: ${{ fromJSON(github.event.inputs.need_build_android) }}
    uses: ./.github/workflows/build-android.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}

  ios:
    if: ${{ fromJSON(github.event.inputs.need_build_ios) }}
    uses: ./.github/workflows/build-ios.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}

  web:
    if: ${{ fromJSON(github.event.inputs.need_build_web) }}
    uses: ./.github/workflows/build-web.yml
    secrets: inherit
    with:
      environment: ${{ github.event.inputs.environment }}

  meta:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.v.outputs.version }}
      tag: ${{ steps.v.outputs.tag }}
      env_name: ${{ steps.v.outputs.env_name }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - id: v
        run: |
          VERSION="v1.0.${{ github.run_number }}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${VERSION}" >> $GITHUB_OUTPUT
          echo "env_name=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

  release:
    # espera meta e (se existirem) os builds
    needs: [meta, android, ios, web]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # Garante que os caminhos existem e cria o zip do web
      - name: Preparar assets do release (a partir de lib/)
        run: |
          ls -la lib || true
          # zipa a pasta lib/web -> lib/web.zip (se existir)
          if [ -d "lib/web" ]; then
            (cd lib && zip -r web.zip web)
          fi
          # mostra o que vamos anexar
          echo "---- Assets encontrados ----"
          ls -la lib/*.aab 2>/dev/null || true
          ls -la lib/*.ipa 2>/dev/null || true
          ls -la lib/web.zip 2>/dev/null || true

      - name: Criar Release e anexar assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.meta.outputs.tag }}
          name: Release ${{ needs.meta.outputs.version }} â€¢ ${{ needs.meta.outputs.env_name }}
          draft: false
          prerelease: ${{ needs.meta.outputs.env_name != 'prod' }}
          files: |
            lib/*.aab
            lib/*.ipa
            lib/web.zip
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: 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
